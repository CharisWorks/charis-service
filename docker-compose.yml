version: "3"
services:
  strapi:
    container_name: strapi
    build: ./strapi
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./strapi/config:/app/config
      - ./strapi/src:/app/src
      - ./strapi/public/uploads:/app/public/uploads
      - strapi-media:/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB
  next:
    container_name: frontend
    build: ./next
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./next:/app/next
    ports:
      - "3000:3000"
    networks:
      - strapi
  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: mysql:5.7
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    ports:
      - "3306:3306"
    networks:
      - strapi
  meilisearch:
    image: getmeili/meilisearch:v1.5 # バージョンは任意
    environment:
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
    ports:
      - "7700:7700"
    networks:
      - strapi
  go:
    image: golang:1.22
    container_name: go
    working_dir: /gobackend
    env_file: .env
    volumes:
      - ./go:/gobackend
      - ./strapi/public/uploads:/gobackend/uploads
      - strapi-media:/gobackend/uploads
    ports:
      - "8080:8080"
    networks:
      - strapi
    command: go run main.go
  stripe:
    image: stripe/stripe-cli
    container_name: stripe
    environment:
      - STRIPE_API_KEY=${STRIPE_SECRET_API_KEY}
    networks:
      - strapi
    command: listen --forward-to http://go:8080/webhooks/stripe

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    user: root
    ports:
      - "3011:3000"
    volumes:
      - "./grafana_storage:/var/lib/grafana"
    networks:
      - strapi
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    user: root
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./prometheus-data:/prometheus"
    networks:
      - strapi
  backup:
    image: alpine
    volumes:
      - ./backups:/backups
      - ./backup.sh:/opt/backup.sh
    environment:
      DATABASE_HOST: strapiDB
      DATABASE_USER: ${DATABASE_USERNAME}
      DATABASE_PASS: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    entrypoint:
      ["sh", "-c", "apk add --no-cache mysql-client && /opt/backup.sh"]
    networks:
      - strapi
volumes:
  strapi-media:
networks:
  strapi:
    name: Strapi
    driver: bridge
