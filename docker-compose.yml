version: "3"
services:
  strapi:
    container_name: strapi
    build: ./strapi
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./strapi/config:/opt/app/config
      - ./strapi/src:/opt/app/src
      - ./strapi/package.json:/opt/package.json
      - ./strapi/yarn.lock:/opt/yarn.lock
      - ./strapi/.env:/opt/app/.env
      - ./strapi/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: mysql:5.7
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    # volumes:
    #   - strapi-data:/var/lib/mysql
    #- ./data:/var/lib/mysql # if you want to use a bind folder
    ports:
      - "3306:3306"
    networks:
      - strapi
  meilisearch:
    image: getmeili/meilisearch:v1.5 # バージョンは任意
    environment:
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
    ports:
      - "7700:7700"
    networks:
      - strapi
  go:
    image: golang:1.22
    container_name: go
    working_dir: /gobackend
    environment:
      - STRIPE_API_KEY=${STRIPE_API_KEY}
      - STRIPE_SECRET_API_KEY=${STRIPE_SECRET_API_KEY}
      - STRAPI_JWT=${STRAPI_JWT}
    volumes:
      - ./go:/gobackend
    ports:
      - "8080:8080"
    networks:
      - strapi
    command: go run main.go
  stripe:
    image: stripe/stripe-cli
    container_name: stripe
    environment:
      - STRIPE_API_KEY=${STRIPE_SECRET_API_KEY}
    volumes:
      - ./stripe:/stripe
    networks:
      - strapi
    command: listen --forward-to http://go:8080/webhooks/stripe
volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge
